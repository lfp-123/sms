<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supermarket.dao.EmployeesDao">
    <resultMap id="EmpMap" type="com.supermarket.entity.Employees">
        <id column="emp_id" jdbcType="INTEGER" property="empId"/>
        <result column="emp_name" jdbcType="VARCHAR" property="empName"/>
        <result column="emp_native_place" jdbcType="VARCHAR" property="empNativePlace"/>
        <result column="emp_addr" jdbcType="VARCHAR" property="empAddr"/>
        <result column="emp_phone" jdbcType="INTEGER" property="empPhone"/>
        <result column="emp_identity" jdbcType="INTEGER" property="empIdentity"/>
        <result column="emp_sex" jdbcType="INTEGER" property="empSex"/>
        <result column="dept_id" jdbcType="INTEGER" property="deptId"/>
        <result column="emp_describe" jdbcType="VARCHAR" property="empDescribe"/>
    </resultMap>

    <resultMap id="DeptMap" type="com.supermarket.entity.Dept">
        <id column="dept_id" jdbcType="INTEGER" property="deptId"/>
        <result column="dept_name" jdbcType="VARCHAR" property="deptName"/>
    </resultMap>

    <select id="findByEmpId" resultMap="EmpMap" parameterType="Integer">
			select * from sm_employees where emp_id=#{id}
	</select>

    <select id="findAll" parameterType="Map" resultMap="EmpMap">
        SELECT * FROM sm_employees a
        <where>
            <if test="empName!=null and empName!='' ">
                and emp_name like "%"#{empName}"%"
            </if>
        </where>
        <if test="page!=null and limit!=null">
            limit #{page},#{limit}
        </if>
    </select>

    <select id="count" parameterType="Map" resultType="Long">
        select count(*) from sm_employees
        <where>
            <if test="emp_name != null and emp_name!='' ">
                and emp_name like "%"#{empName}"%"
            </if>
        </where>
    </select>

    <select id="findRepeat" resultMap="EmpMap" parameterType="String">
			select * from sm_employees where emp_name = #{empName}
	</select>

    <select id="findDeptName" resultType="java.lang.String" parameterType="integer">
        select dept_name from sm_dept where dept_id = #{deptId}
    </select>

    <select id="findAllDept" resultMap="DeptMap">
        select * from sm_dept
    </select>

    <insert id="add" parameterType="Employees">
        insert into sm_employees
        (emp_name,emp_native_place,emp_addr,emp_phone,emp_identity,emp_sex,dept_id,emp_describe)
        values(#{empName},#{empNativePlace},#{empAddr},#{empPhone},#{empIdentity},#{empSex},#{deptId},#{empDescribe})
    </insert>

    <delete id="delete" parameterType="Integer">
		delete from sm_employees where emp_id=#{id}
	</delete>

    <update id="update" parameterType="Employees">
        update sm_employees
        <set>
            <if test="empName!=null and empName!=''">
                emp_name=#{empName},
            </if>
            <if test="empNativePlace!=null and empNativePlace!=''">
                emp_native_place=#{empNativePlace},
            </if>
            <if test="empAddr!=null and empAddr!=''">
                emp_addr=#{empAddr},
            </if>
            <if test="empPhone!=null and empPhone!=''">
                emp_phone=#{empPhone},
            </if>
            <if test="empIdentity!=null and empIdentity!=''">
                emp_identity=#{empIdentity},
            </if>
            <if test="empSex!=null and empSex!=''">
                emp_sex=#{empSex},
            </if>
            <if test="deptId!=null and deptId!=''">
                dept_id=#{deptId},
            </if>
            <if test="empDescribe!=null and empDescribe!=''">
                emp_describe=#{empDescribe},
            </if>
        </set>
        where emp_id=#{empId}
    </update>
</mapper>