<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supermarket.dao.UserDao">
    <resultMap type="User" id="UserResult">
        <result property="id" column="id"/>
        <result property="userName" column="userName"/>
        <result property="password" column="password"/>
        <result property="trueName" column="trueName"/>
        <result property="number" column="number"/>
        <result property="address" column="address"/>
        <result property="roleName" column="roleName"/>
    </resultMap>

    <sql id="userColumn">
        sm_user.id
        , sm_user.userName, sm_user.password, sm_user.trueName, sm_user.number, sm_user.address
    </sql>

    <select id="findByUserName" resultMap="UserResult" parameterType="String">
        select
        <include refid="userColumn"/>
        from sm_user where userName = #{userName}
    </select>

    <select id="findAll" parameterType="Map" resultMap="UserResult">
        SELECT <include refid="userColumn"/>, t2.roleName, t2.id as roleId
        FROM sm_user
            LEFT JOIN sm_roleuser t3 ON sm_user.id = t3.userId
            LEFT JOIN sm_role t2 ON t2.id = t3.roleId
        <where>
            <if test="userName != null and userName != ''">
                and userName like "%"#{userName}"%"
            </if>
        </where>
        <if test="page != null and limit != null">
            limit #{page},#{limit}
        </if>
    </select>

    <select id="count" parameterType="Map" resultType="Long">
        select count(1) from sm_user
        <where>
            <if test="userName != null and userName != ''">
                and userName like "%"#{userName}"%"
            </if>
        </where>
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="User">
        insert into sm_user
        values (null, #{userName}, #{password}, #{trueName}, #{number}, #{address})
    </insert>

    <delete id="delete" parameterType="Integer">
        delete
        from sm_user
        where id = #{id}
    </delete>

    <update id="update" parameterType="User">
        update sm_user
        <set>
            <if test="trueName != null and trueName != ''">
                trueName = #{trueName},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="number != null and number != ''">
                number = #{number},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateReset" parameterType="Integer">
        update sm_user
        set password='123'
        where id = #{id}
    </update>

    <select id="findRoleId" resultMap="UserResult" parameterType="String">
        SELECT <include refid="userColumn"/>, t2.roleName, t2.id as roleId
        FROM sm_user
                 LEFT JOIN sm_roleuser t3 ON sm_user.id = t3.userId
                 LEFT JOIN sm_role t2 ON t2.id = t3.roleId
        where sm_user.userName = #{userName}
    </select>

    <select id="selectRolesByUsername" resultType="java.lang.String" parameterType="string">
        select rolename
        from sm_role
        where id in (select roleId
                     from sm_roleuser
                     where userId in (select id from supermarketmanagerdb.sm_user where userName = #{username}))
    </select>
</mapper>